---
name: Staging Server

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      


      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
        
      - name: Mask generated GCP values
        run: |
          echo "::add-mask::${{ env.CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE }}"
          echo "::add-mask::${{ env.GOOGLE_APPLICATION_CREDENTIALS }}"
          echo "::add-mask::${{ env.GOOGLE_GHA_CREDS_PATH }}"
          echo "::add-mask::${{ env.CLOUDSDK_CORE_PROJECT }}"
          echo "::add-mask::${{ env.CLOUDSDK_PROJECT }}"
          echo "::add-mask::${{ env.GCLOUD_PROJECT }}"
          echo "::add-mask::${{ env.GCP_PROJECT }}"
          echo "::add-mask::${{ env.GOOGLE_CLOUD_PROJECT }}" 

      - name: Terraform Initialize and Apply
        working-directory: ./terraform
        id: terraform
        run: |
          terraform init
          terraform apply -auto-approve
  
  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    steps:  
    
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Authenticate with GCP
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'  

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Mask generated GCP values
      run: |
        echo "::add-mask::${{ env.CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE }}"
        echo "::add-mask::${{ env.GOOGLE_APPLICATION_CREDENTIALS }}"
        echo "::add-mask::${{ env.GOOGLE_GHA_CREDS_PATH }}"
        echo "::add-mask::${{ env.CLOUDSDK_CORE_PROJECT }}"
        echo "::add-mask::${{ env.CLOUDSDK_PROJECT }}"
        echo "::add-mask::${{ env.GCLOUD_PROJECT }}"
        echo "::add-mask::${{ env.GCP_PROJECT }}"
        echo "::add-mask::${{ env.GOOGLE_CLOUD_PROJECT }}" 
    
    - name: Fetch instance details
      id: fetch_instance_details
      run: |
        INSTANCE_NAME=$(gcloud compute instances list --filter="labels.type=staging" --format='value(name)')
        echo "INSTANCE_NAME=$INSTANCE_NAME" >> $GITHUB_ENV
        echo "::add-mask::$INSTANCE_NAME"

        INSTANCE_ZONE=$(gcloud compute instances list --filter="labels.type=staging" --format='value(zone)')
        echo "INSTANCE_ZONE=$INSTANCE_ZONE" >> $GITHUB_ENV
        echo "::add-mask::$INSTANCE_ZONE"

        INSTANCE_IP=$(gcloud compute instances describe $INSTANCE_NAME --zone $INSTANCE_ZONE --format='value(networkInterfaces[0].accessConfigs[0].natIP)')
        echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
        echo "::add-mask::$INSTANCE_IP"

        INSTANCE_HOSTNAME=$(gcloud compute instances describe $INSTANCE_NAME --zone $INSTANCE_ZONE --format='value(hostname)')
        echo "INSTANCE_HOSTNAME=$INSTANCE_HOSTNAME" >> $GITHUB_ENV
        echo "::add-mask::$INSTANCE_HOSTNAME"


        echo "instance_name=$INSTANCE_NAME" >> $GITHUB_OUTPUT
        echo "instance_zone=$INSTANCE_ZONE" >> $GITHUB_OUTPUT
        echo "insance_ip=$INSTANCE_IP" >> $GITHUB_OUTPUT
        echo "instance_hostname=$INSTANCE_HOSTNAME" >> $GITHUB_OUTPUT

    - name: Update default.yml
      run: |
        HOSTNAME=${{ steps.fetch_instance_details.outputs.instance_hostname }}
        sed -i "s|your_domain|$INSTANCE_HOSTNAME|" ./ansible/vars/default.yml

    - name: Update Inventory File
      run: |
        sed -i "s|PATH_TO_SERVICE_ACCOUNT_FILE|$GOOGLE_GHA_CREDS_PATH|" ./ansible/misc/inventory.gcp.yml
        sed -i "s|PROJECT_ID|$GCP_PROJECT|" ./ansible/misc/inventory.gcp.yml   

    - name: Install dependencies
      run: |
        /opt/pipx/venvs/ansible-core/bin/python -m pip install google-auth requests
        
    - name: Run playbook
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        INSTANCE_IP: ${{ steps.fetch_instance_details.outputs.instance_ip }}
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: playbook.yml
        directory: ./ansible
        options: |
          --inventory misc/inventory.gcp.yml

